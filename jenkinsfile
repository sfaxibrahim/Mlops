# Jenkinsfile with Docker handling
pipeline {
    agent any
    
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'master', url: 'https://github.com/sfaxibrahim/Mlops.git'
            }
        }
        
        stage('Build and Start Services') {
            steps {
                script {
                    // Force rebuild images and start services
                    bat 'docker-compose build --no-cache'
                    bat 'docker-compose up -d'
                    
                    // Wait for services to be healthy
                    bat 'timeout /t 30 /nobreak'
                }
            }
        }
        
        stage('Verify Services') {
            steps {
                script {
                    // Check if services are running
                    bat 'docker-compose ps'
                    
                    // Test backend availability
                    bat 'curl http://localhost:8000'
                    
                    // Test frontend availability
                    bat 'curl http://localhost:8501'
                }
            }
        }
        
        stage('Teardown Services') {
            steps {
                script {
                    bat 'docker-compose down --remove-orphans'
                }
            }
        }
    }
    
    post {
        always {
            script {
                // Ensure cleanup even if pipeline fails
                bat 'docker-compose down --remove-orphans'
                bat 'docker system prune -f'
            }
        }
    }
}